/*
 * JSONpedia - Convert any MediaWiki document to JSON.
 *
 * Written in 2014 by Michele Mostarda <mostarda@fbk.eu>.
 *
 * To the extent possible under law, the author has dedicated all copyright and related and
 * neighboring rights to this software to the public domain worldwide.
 * This software is distributed without any warranty.
 *
 * You should have received a copy of the CC BY Creative Commons Attribution 4.0 Internationa Public License.
 * If not, see <https://creativecommons.org/licenses/by/4.0/legalcode>.
 */

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:0.8'
    }
}
//apply plugin: 'shadow'

sourceCompatibility = 1.7
//encoding = 'UTF-8'

group = 'com.machinelinking'
version = '1.2-SNAPSHOT'

storageLoaderClassName = 'com.machinelinking.cli.loader'
facetLoaderClassName = 'com.machinelinking.cli.facetloader'
storageLoaderJVMArgs = ["-Xmx4g", "-Xms4g", "-Dlog4j.configuration=file:conf/log4j.properties"]

tasks.withType(Compile){
    options.encoding = encoding
}

tasks.withType(Javadoc){
    options.encoding = encoding
}

repositories {
    mavenCentral()
}

//jar {
//  excludes {
//              exclude 'META-INF/MANIFEST.MF'
//              exclude 'META-INF/*.SF'
//              exclude 'META-INF/*.DSA'
//              exclude 'META-INF/*.RSA'
//          }
//}

// TODO http://stackoverflow.com/questions/22342782/returning-a-string-as-json-response-when-run-as-a-jar-file-fails-with-500-status
//shadow {
//    destinationDir = 'build/distributions'
//    classifier = '1.0'
//
//    //mergeServiceFiles()
//    exclude(dependency('com.sun.jersey:jersey-json:1.18.1/META-INF'))
//    exclude 'META-INF/*.SF'
//    exclude 'META-INF/*.DSA'
//    exclude 'META-INF/*.RSA'
//}

dependencies {
    // dependencies
    compile group: 'log4j', name: 'log4j', version:'1.2.17'
    compile group: 'org.codehaus.jackson', name: 'jackson-jaxrs', version:'1.9.6'
    compile group: 'commons-io', name: 'commons-io', version:'2.4'
    compile group: 'org.apache.commons', name: 'commons-compress', version:'1.0'
    compile group: 'org.python', name: 'jython', version:'2.7-b1'
    compile group: 'com.beust', name: 'jcommander', version:'1.29'
    compile group: 'org.mongodb', name: 'mongo-java-driver', version:'2.9.3'
    compile group: 'org.elasticsearch', name: 'elasticsearch', version:'1.0.1'
    compile group: 'org.apache.velocity', name: 'velocity', version:'1.7'
    compile group: 'javax.servlet', name: 'servlet-api', version:'2.5'
    compile group: 'com.sun.jersey', name: 'jersey-core', version:'1.18.1'
    compile group: 'com.sun.jersey', name: 'jersey-bundle', version: '1.18.1'
    compile group: 'com.sun.jersey', name: 'jersey-servlet', version:'1.18.1'
    compile group: 'com.sun.jersey', name: 'jersey-json', version:'1.18.1'
    compile group: 'com.sun.jersey', name: 'jersey-grizzly2', version:'1.18.1'

    // testing dependencies
    testCompile group: 'junit', name: 'junit', version:'4.7'
}

task runLoader(dependsOn: jar, type: JavaExec) {
  storageLoaderJVMArgs = ["-Xmx4g", "-Xms4g", "-Dlog4j.configuration=file:conf/log4j.properties"]
  jvmArgs = storageLoaderJVMArgs
  storageLoaderClassName = 'com.machinelinking.cli.loader'
  main = storageLoaderClassName
  classpath = sourceSets.main.runtimeClasspath
  if(project.hasProperty("config") && project.hasProperty("dump"))
    args(config, dump)
}

task runFacetLoader(dependsOn: jar, type: JavaExec) {
  storageLoaderJVMArgs = ["-Xmx4g", "-Xms4g", "-Dlog4j.configuration=file:conf/log4j.properties"]
  facetLoaderClassName = 'com.machinelinking.cli.facetloader'
  jvmArgs = storageLoaderJVMArgs
  main = facetLoaderClassName
  classpath = sourceSets.main.runtimeClasspath
  if(project.hasProperty("args_line"))
    args(args_line.split())
}

